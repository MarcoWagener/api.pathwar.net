FORMAT: 1A

# Pathwar API
Official Pathwar REST Api


## Authentication
To be defined


## Media Types
This API uses the json media-type to represent resources states and affordances.

Requests with a message-body are using plain JSON to set or update resource states.


## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.


# Group People
This section describes about the People


## User [/users/{id}]
This resource represents one particular user identified by its *id*.

+ Parameters
    + id (required, string, `a5595d9b-75a5-4a18-8cd9-2cff9907b7ac`) ... Id of a user.

+ Model (application/json)
    HATEOAS/JSON representation of User resource.

    + Headers

            ETag: 8f5d7df0210b75992b41834329c0abdea9a02bc2
            Last-Modified: Wed, 07 Jan 2015 16:43:17 GMT

    + Body

            {
                "_created": "Wed, 07 Jan 2015 16:43:17 GMT",
                "_etag": "8f5d7df0210b75992b41834329c0abdea9a02bc2",
                "_id": "a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                "_links": {
                    "collection": {
                        "href": "users",
                        "title": "users"
                    },
                    "parent": {
                        "href": "/",
                        "title": "home"
                    },
                    "self": {
                        "href": "users/a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                        "title": "user"
                    }
                },
                "_updated": "Wed, 07 Jan 2015 16:43:17 GMT",
                "email": "m1ch3l@pathwar.net",
                "login": "m1ch3l",
                "role": "superuser"
            }


### Retrieve User [GET]
Return the information for the User

+ Response 200

    [User][]

+ Response 404

            {
                "_error": {
                    "code": 404,
                    "message": "The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again."
                },
                "_status": "ERR"
            }


## User Collection [/users]
Collection of users.

+ Model (application/json)
    HATEOAS/JSON representation of User collection.

    + Headers

            Last-Modified: Tue, 30 Dec 2014 11:41:14 GMT

    + Body

            {
                "_items": [
                    {
                        "_created": "Thu, 01 Jan 1970 00:00:00 GMT",
                        "_etag": "6a169281df830752d6752b916f73d1976282c6c4",
                        "_id": "53705c4b-7bf9-4672-a872-c84988e16db8",
                        "_links": {
                            "self": {
                                "href": "users/53705c4b-7bf9-4672-a872-c84988e16db8",
                                "title": "user"
                            }
                        },
                        "_updated": "Thu, 01 Jan 1970 00:00:00 GMT",
                        "login": "root",
                        "role": "admin"
                    },
                    {
                        "_created": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "_etag": "ea3b5b1b3320749e8198d79243b829ca1439958b",
                        "_id": "67e1c418-63eb-4dd3-b2f0-e5d8487b979b",
                        "_links": {
                            "self": {
                                "href": "users/67e1c418-63eb-4dd3-b2f0-e5d8487b979b",
                                "title": "user"
                            }
                        },
                        "_updated": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "email": "joe@pathwar.net",
                        "login": "joe",
                        "role": "user"
                    },
                    {
                        "_created": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "_etag": "8f5d7df0210b75992b41834329c0abdea9a02bc2",
                        "_id": "a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                        "_links": {
                            "self": {
                                "href": "users/a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                                "title": "user"
                            }
                        },
                        "_updated": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "email": "m1ch3l@pathwar.net",
                        "login": "m1ch3l",
                        "role": "superuser"
                    }
                ],
                "_links": {
                    "parent": {
                        "href": "/",
                        "title": "home"
                    },
                    "self": {
                        "href": "users",
                        "title": "users"
                    }
                },
                "_meta": {
                    "max_results": 25,
                    "page": 1,
                    "total": 3
                }
            }


### List all users [GET]

+ Response 200

    [User Collection][]


## Organization [/organizations/{id}]
This resource represents one particular organization identified by its *id*.

+ Parameters
    + id (required, string, `123e4567-e89b-12d3-a456-426655440000`) ... Id of an organization.

+ Model (application/json)
    JSON representation of Organization resource.
    + Body

        ```js
        {
          "name": "ulteam",
          "members": [
            "xxxx-xxxxxx-xxxxxx-xxxx",
            "xxxx-xxxxxx-xxxxxx-xxxx",
          ]
        }
        ```


### Retrieve Organization [GET]
Return the information for the Organization

+ Response 200

    [Organization][]


## Organization Collection [/organizations]
Collection of organizations.

+ Model (application/json)

        ```js
        {
          "count": 2,
          "_embedded": [
            {
              "name": "ulteam",
              "members": [
                "xxxx-xxxxxx-xxxxxx-xxx1",
                "xxxx-xxxxxx-xxxxxx-xxx2",
              ]
            },
            {
              "name": "ultreme",
              "members": [
                "xxxx-xxxxxx-xxxxxx-xxx3",
                "xxxx-xxxxxx-xxxxxx-xxx4",
              ]
            },
          ]
        }
        ```


### List all organizations [GET]

+ Response 200

    [Organization Collection][]


# Group Level
This section describes about the Level


## Level [/levels/{id}]
This resource represents one particular level identified by its *id*.

+ Parameters
    + id (required, string, `123e4567-e89b-12d3-a456-426655440000`) ... Id of a level.

+ Model (application/json)
    JSON representation of a Level resource.
    + Body

        ```js
        {
          "name": "pwnland",
          "description": "pwnland is cool",
          "author": "Pathwar Team (@pathwar_net)"
        }
        ```


### Retrieve Level [GET]
Return the information for the Level

+ Response 200

    [Level][]


## Level Collection [/levels]
Collection of levels.

+ Model (application/json)

        ```js
        {
          "count": 2,
          "_embedded": [
            {
              "name": "pwnland",
              "description": "pwnland is cool",
              "author": "Pathwar Team (@pathwar_net)"
            },
            {
              "name": "megapwnland",
              "description": "megapwnland is megacool",
              "author": "Pathwar Team (@pathwar_net)"
            }
          ]
        }
        ```


### List all levels [GET]

+ Response 200

    [Level Collection][]


# Group Coupon
This section describes about the Coupon


## Coupon [/coupons/{id}]
This resource represents one particular coupon identified by its *id*.

+ Parameters
    + id (required, string, `123e4567-e89b-12d3-a456-426655440000`) ... Id of a coupon.

+ Model (application/json)
    JSON representation of a Coupon resource.
    + Body

        ```js
        {
          "name": "magic coupon",
          "token": "*hidden*",
          "unique": true,
          "state": "available"
        }
        ```


### Retrieve Coupon [GET]
Return the information for the Coupon

+ Response 200

    [Coupon][]


## Coupon Collection [/coupons]
Collection of coupons.

+ Model (application/json)

        ```js
        {
          "count": 2,
          "_embedded": [
            {
              "name": "magic coupon",
              "token": "*hidden*",
              "unique": true,
              "state": "available"
            },
            {
              "name": "mega magic coupon",
              "token": "*hidden*",
              "unique": true,
              "state": "available"
            }
          ]
        }
        ```


### List all coupons [GET]

+ Response 200

    [Coupon Collection][]


# Group Achievement
This section describes about the Achievement


## Achievement [/achievements/{id}]
This resource represents one particular achievement identified by its *id*.

+ Parameters
    + id (required, string, `123e4567-e89b-12d3-a456-426655440000`) ... Id of a achievement.

+ Model (application/json)
    JSON representation of a Achievement resource.
    + Body

        ```js
        {
          "name": "hack the planet",
          "description": "Finish all the levels"
        }
        ```


### Retrieve Achievement [GET]
Return the information for the Achievement

+ Response 200

    [Achievement][]


## Achievement Collection [/achievements]
Collection of achievements.

+ Model (application/json)

        ```js
        {
          "count": 2,
          "_embedded": [
            {
              "name": "hack the planet",
              "description": "Finish all the levels"
            },
            {
              "name": "hack the universe",
              "description": "Finish all the levels and more"
            }
          ]
        }
        ```


### List all achievements [GET]

+ Response 200

    [Achievement Collection][]


# Group Session
This section describes about the Session


## Session [/sessions/{id}]
This resource represents one particular session identified by its *id*.

+ Parameters
    + id (required, string, `123e4567-e89b-12d3-a456-426655440000`) ... Id of a session.

+ Model (application/json)
    JSON representation of a Session resource.
    + Body

        ```js
        {
          "name": "Paris Final",
          "description": "Best teams of Paris"
        }
        ```


### Retrieve Session [GET]
Return the information for the Session

+ Response 200

    [Session][]


## Session Collection [/sessions]
Collection of sessions.

+ Model (application/json)

        ```js
        {
          "count": 2,
          "_embedded": [
            {
              "name": "Paris Final",
              "description": "Best teams of Paris"
            },
            {
              "name": "SF Final",
              "description": "Best teams of San Francisco"
            }
          ]
        }
        ```


### List all sessions [GET]

+ Response 200

    [Session Collection][]
