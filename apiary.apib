FORMAT: 1A

# Pathwar API
Official Pathwar REST Api


## Authentication
To be defined


## Media Types
This API uses the json media-type to represent resources states and affordances.

Requests with a message-body are using plain JSON to set or update resource
states.


## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.


# Pathwar API Root [/]
Pathwar API entry point.

This resource does not have any attributes.
Instead it offers the initial API affordances in the form of HATEOAS links.

## Retrieve Entry Point [GET]

+ Request JSON
    + Headers

            Accept: application/json

+ Response 200 (application/json)
    + Body

            {
                "_links": {
                    "child": [
                        {
                            "href": "achievements",
                            "title": "achievements"
                        },
                        {
                            "href": "organization-level-validations",
                            "title": "organization level validation submissions"
                        },
                        {
                            "href": "organization-items",
                            "title": "organization items"
                        },
                        {
                            "href": "users",
                            "title": "users"
                        },
                        {
                            "href": "organizations",
                            "title": "organizations"
                        },
                        {
                            "href": "items",
                            "title": "items"
                        },
                        {
                            "href": "user-activities",
                            "title": "user activities"
                        },
                        {
                            "href": "sessions",
                            "title": "sessions"
                        },
                        {
                            "href": "level-hints",
                            "title": "level hints"
                        },
                        {
                            "href": "organization-coupons",
                            "title": "organization validated coupons"
                        },
                        {
                            "href": "user-notifications",
                            "title": "user notifications"
                        },
                        {
                            "href": "level-instances",
                            "title": "level instances"
                        },
                        {
                            "href": "levels",
                            "title": "levels"
                        },
                        {
                            "href": "user-organization-invites",
                            "title": "user organization invites"
                        },
                        {
                            "href": "organization-achievements",
                            "title": "organization earned achievements"
                        },
                        {
                            "href": "organization-users",
                            "title": "organization items"
                        },
                        {
                            "href": "organization-levels",
                            "title": "organization bought levels"
                        },
                        {
                            "href": "servers",
                            "title": "servers"
                        },
                        {
                            "href": "coupons",
                            "title": "coupons"
                        },
                        {
                            "href": "user-tokens",
                            "title": "user tokens"
                        }
                    ]
                }
            }

+ Request XML
    + Headers

            Accept: text/xml

+ Response 200 (text/xml)
    + Body

            <?xml version="1.0"?>
            <resource>
              <link rel="child" href="achievements" title="achievements"/>
              <link rel="child" href="organization-level-validations" title="organization level validation submissions"/>
              <link rel="child" href="organization-items" title="organization items"/>
              <link rel="child" href="users" title="users"/>
              <link rel="child" href="organizations" title="organizations"/>
              <link rel="child" href="items" title="items"/>
              <link rel="child" href="user-activities" title="user activities"/>
              <link rel="child" href="sessions" title="sessions"/>
              <link rel="child" href="level-hints" title="level hints"/>
              <link rel="child" href="organization-coupons" title="organization validated coupons"/>
              <link rel="child" href="user-notifications" title="user notifications"/>
              <link rel="child" href="level-instances" title="level instances"/>
              <link rel="child" href="levels" title="levels"/>
              <link rel="child" href="user-organization-invites" title="user organization invites"/>
              <link rel="child" href="organization-achievements" title="organization earned achievements"/>
              <link rel="child" href="organization-users" title="organization items"/>
              <link rel="child" href="organization-levels" title="organization bought levels"/>
              <link rel="child" href="servers" title="servers"/>
              <link rel="child" href="coupons" title="coupons"/>
              <link rel="child" href="user-tokens" title="user tokens"/>
            </resource>


# Group User
This section describes about the Users

## User [/users/{id}]
This resource represents one particular user identified by its *id*.

+ Parameters
    + id (required, string, `a5595d9b-75a5-4a18-8cd9-2cff9907b7ac`) ... Id of a user.

+ Model (application/json)
    HATEOAS/JSON representation of User resource.

    + login (required, string, `m1ch3l`)
    + role (required, string, `user`)
    + email (required, string, `m1ch3l@pathwar.net`)
    + _id (required, uuid, `a5595d9b-75a5-4a18-8cd9-2cff9907b7ac`)

    + Headers

            ETag: 8f5d7df0210b75992b41834329c0abdea9a02bc2
            Last-Modified: Wed, 07 Jan 2015 16:43:17 GMT

    + Body

            {
                "_created": "Wed, 07 Jan 2015 16:43:17 GMT",
                "_etag": "8f5d7df0210b75992b41834329c0abdea9a02bc2",
                "_id": "a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                "_links": {
                    "collection": {
                        "href": "users",
                        "title": "users"
                    },
                    "parent": {
                        "href": "/",
                        "title": "home"
                    },
                    "self": {
                        "href": "users/a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                        "title": "user"
                    }
                },
                "_updated": "Wed, 07 Jan 2015 16:43:17 GMT",
                "email": "m1ch3l@pathwar.net",
                "login": "m1ch3l",
                "role": "superuser"
            }


### Retrieve User [GET]
Return the information for the User

+ Request JSON
    + Headers

            Accept: application/json

+ Response 200

    [User][]


+ Response 404 (application/json)

            {
                "_error": {
                    "code": 404,
                    "message": "The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again."
                },
                "_status": "ERR"
            }

+ Request XML
    + Headers

            Accept: text/xml

+ Response 200 (text/xml)
    + Headers

            ETag: 02216b1b49633800788a715438f2804da0ce47f6
            Last-Modified: Fri, 09 Jan 2015 08:43:11 GMT

    + Body

            <?xml version="1.0"?>
            <resource href="users/1b42f640-5b9e-48fb-954d-016087c14457" title="user">
              <link rel="collection" href="users" title="users"/>
              <link rel="parent" href="/" title="home"/>
              <_created>Fri, 09 Jan 2015 08:43:11 GMT</_created>
              <_etag>02216b1b49633800788a715438f2804da0ce47f6</_etag>
              <_id>1b42f640-5b9e-48fb-954d-016087c14457</_id>
              <_updated>Fri, 09 Jan 2015 08:43:11 GMT</_updated>
              <email>joe@pathwar.net</email>
              <login>joe</login>
              <role>user</role>
            </resource>

+ Response 404 (text/xml)
    + Body

            <?xml version="1.0"?>
            <resource>
              <_error>
                <code>404</code>
                  <message>The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.</message>
              </_error>
              <_status>ERR</_status>
            </resource>


### Edit User [PATCH]
Edit the information of the User

+ Request (application/x-www-form-urlencoded)
    + Headers

            If-Match: 572c96529cb56a67c304eddf5a0af792caad2a5a

    + Body

            login=m1ch3l

+ Response 200

    [User][]

+ Request
    + Headers

            If-Match: 572c96529cb56a67c304eddf5a0af792caad2a5a

+ Response 400 (application/json)
    + Body

            {
                "_status": "ERR",
                "_error": {
                    "message": "Unknown or no Content-Type header supplied",
                    "code": 400
                }
            }

+ Request
    + Headers

            If-Match: <unset>

+ Response 403 (application/json)
    + Body

            {
                "_status": "ERR",
                "_error": {
                    "message": "An etag must be provided to edit a document",
                    "code": 403
                }
            }

+ Response 412 (text/html)
    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
            <title>412 Precondition Failed</title>
            <h1>Precondition Failed</h1>
            <p>Client and server etags don't match</p>

+ Response 422 (application/json)
    + Body

            {
                "_status": "ERR",
                "_issues": {
                    "login": "value 'm1ch3l' is not unique"
                }
            }

## User Collection [/users{?max_results}{?page}{?where}]
Collection of users.

+ Model (application/json)
    HATEOAS/JSON representation of User collection.

    + Headers

            Last-Modified: Tue, 30 Dec 2014 11:41:14 GMT

    + Body

            {
                "_items": [
                    {
                        "_created": "Thu, 01 Jan 1970 00:00:00 GMT",
                        "_etag": "6a169281df830752d6752b916f73d1976282c6c4",
                        "_id": "53705c4b-7bf9-4672-a872-c84988e16db8",
                        "_links": {
                            "self": {
                                "href": "users/53705c4b-7bf9-4672-a872-c84988e16db8",
                                "title": "user"
                            }
                        },
                        "_updated": "Thu, 01 Jan 1970 00:00:00 GMT",
                        "login": "root",
                        "role": "admin"
                    },
                    {
                        "_created": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "_etag": "ea3b5b1b3320749e8198d79243b829ca1439958b",
                        "_id": "67e1c418-63eb-4dd3-b2f0-e5d8487b979b",
                        "_links": {
                            "self": {
                                "href": "users/67e1c418-63eb-4dd3-b2f0-e5d8487b979b",
                                "title": "user"
                            }
                        },
                        "_updated": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "email": "joe@pathwar.net",
                        "login": "joe",
                        "role": "user"
                    },
                    {
                        "_created": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "_etag": "8f5d7df0210b75992b41834329c0abdea9a02bc2",
                        "_id": "a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                        "_links": {
                            "self": {
                                "href": "users/a5595d9b-75a5-4a18-8cd9-2cff9907b7ac",
                                "title": "user"
                            }
                        },
                        "_updated": "Wed, 07 Jan 2015 16:43:17 GMT",
                        "email": "m1ch3l@pathwar.net",
                        "login": "m1ch3l",
                        "role": "superuser"
                    }
                ],
                "_links": {
                    "parent": {
                        "href": "/",
                        "title": "home"
                    },
                    "self": {
                        "href": "users",
                        "title": "users"
                    }
                },
                "_meta": {
                    "max_results": 25,
                    "page": 1,
                    "total": 3
                }
            }


### List all users [GET]
Return all users.

+ Parameters
    + max_results (optional, integer, `25`) ... The maximum number of results to return
    + page (optional, integer, `2`) ... The page number when using pagination
    + where (optional, string, `where={"role":"superuser"}`) ... Filters

+ Response 200

    [User Collection][]

### Create User [POST]
Create a new User

+ Request (application/json)
    + Body

            {
                "name": "m1ch3l",
                "email": "m1ch3l@pathwar.net",
                "password_blowfish": "xxxxxxxxxxxxx",
                "otp_secret": "xxxxxxxxxxxxx",
                "role": "user"
            }

+ Response 201

    [User][]

+ Response 422 (application/json)
    + Body

            {
                "_error": {
                    "code": 422,
                    "message": "Insertion failure: 1 document(s) contain(s) error(s)"
                },
                "_issues": {
                    "login": "value m1ch3l is not unique"
                },
                "_status": "ERR"
            }

# Group Organization
This section describes about the Organizations

## Organization [/organizations/{id}]
This resource represents one particular organization identified by its *id*.

+ Parameters
    + id (required, string, `123e4567-e89b-12d3-a456-426655440000`) ... Id of an organization.

+ Model (application/json)
    HATEOAS/JSON representation of Organization resource.

    + name (required, string, `staff`)
    + _id (required, uuid, `63f5bf63-c1ae-4329-a0cc-fe3d0de788a9`)

    + Headers

            ETag: 00c381c69d40a93aa2af1509c33d590c474b38e6
            Last-Modified: Fri, 09 Jan 2015 08:43:11 GMT

    + Body

            {
                "_created": "Fri, 09 Jan 2015 08:43:11 GMT",
                "_etag": "00c381c69d40a93aa2af1509c33d590c474b38e6",
                "_id": "63f5bf63-c1ae-4329-a0cc-fe3d0de788a9",
                "_links": {
                    "collection": {
                        "href": "organizations",
                        "title": "organizations"
                    },
                    "parent": {
                        "href": "/",
                        "title": "home"
                    },
                    "self": {
                        "href": "organizations/63f5bf63-c1ae-4329-a0cc-fe3d0de788a9",
                        "title": "organization"
                    }
                },
                "_updated": "Fri, 09 Jan 2015 08:43:11 GMT",
                "name": "staff",
                "points": 0
            }

### Retrieve Organization [GET]
Return the information for the Organization

+ Request JSON
    + Headers

            Accept: application/json

+ Response 200

    [Organization][]

+ Response 404 (application/json)
    + Body

            {
                "_error": {
                    "code": 404,
                    "message": "The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again."
                },
                "_status": "ERR"
            }

+ Request XML
    + Headers

            Accept: text/xml

+ Response 200 (text/xml)
    + Headers

            ETag: 00c381c69d40a93aa2af1509c33d590c474b38e6
            Last-Modified: Fri, 09 Jan 2015 08:43:11 GMT

    + Body

            <?xml version="1.0"?>
            <resource href="organizations/63f5bf63-c1ae-4329-a0cc-fe3d0de788a9" title="organization">
              <link rel="collection" href="organizations" title="organizations"/>
              <link rel="parent" href="/" title="home"/>
              <_created>Fri, 09 Jan 2015 08:43:11 GMT</_created>
              <_etag>00c381c69d40a93aa2af1509c33d590c474b38e6</_etag>
              <_id>63f5bf63-c1ae-4329-a0cc-fe3d0de788a9</_id>
              <_updated>Fri, 09 Jan 2015 08:43:11 GMT</_updated>
              <name>staff</name>
              <points>0</points>
            </resource>

### Edit Organization [PATCH]
Edit the information of the Organization

+ Request (application/x-www-form-urlencoded)
    + Headers

            If-Match: 00c381c69d40a93aa2af1509c33d590c474b38e6

    + Body

            name=staff

+ Response 200

    [Organization][]

+ Request
    + Headers

            If-Match: <unset>

+ Response 403 (application/json)
    + Body

            {
                "_status": "ERR",
                "_error": {
                    "message": "An etag must be provided to edit a document",
                    "code": 403
                }
            }

+ Request
    + Headers

            If-Match: 00c381c69d40a93aa2af1509c33d590c474b38e6

+ Response 400 (application/json)
    + Body

            {
                "_status": "ERR",
                "_error": {
                    "message": "Unknown or no Content-Type header supplied",
                    "code": 400
                }
            }

+ Response 412 (text/html)
    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
            <title>412 Precondition Failed</title>
            <h1>Precondition Failed</h1>
            <p>Client and server etags don't match</p>

+ Response 422 (application/json)
    + Body

            {
                "_status": "ERR",
                "_issues": {
                    "name": "value 'staff' is not unique"
                }
            }

+ Response 422 (application/json)
    + Body

            {
                "_status": "ERR",
                "_issues": {
                    "login": "unknown field"
                }
            }

## Organization Collection [/organizations{?max_results}{?page}{?where}]
Collection of organizations.

+ Model (application/json)
    HATEOAS/JSON representation of Organization collection.

    + Headers

            Last-Modified: Fri, 09 Jan 2015 09:14:48 GMT

    + Body

            {
                "_items": [
                    {
                        "_created": "Fri, 09 Jan 2015 08:43:11 GMT",
                        "_etag": "732fb7241fece98c1e6089a95139ef08216f3818",
                        "_id": "7463919a-ce57-4b24-ad0a-20b74221cde7",
                        "_links": {
                        "self": {
                        "href": "organizations/7463919a-ce57-4b24-ad0a-20b74221cde7",
                        "title": "organization"
                        }
                        },
                        "_updated": "Fri, 09 Jan 2015 08:43:11 GMT",
                        "name": "pwn-around-the-world",
                        "points": 0
                    },
                    {
                        "_created": "Fri, 09 Jan 2015 08:43:11 GMT",
                        "_etag": "7642aa048bb91729d076cd300bd482548398ef91",
                        "_id": "63f5bf63-c1ae-4329-a0cc-fe3d0de788a9",
                        "_links": {
                        "self": {
                        "href": "organizations/63f5bf63-c1ae-4329-a0cc-fe3d0de788a9",
                        "title": "organization"
                        }
                        },
                        "_updated": "Fri, 09 Jan 2015 09:14:48 GMT",
                        "name": "staff3",
                        "points": 0
                     }
                ],
                "_links": {
                    "parent": {
                        "href": "/",
                        "title": "home"
                    },
                    "self": {
                        "href": "organizations",
                        "title": "organizations"
                        }
                    },
                "_meta": {
                    "max_results": 25,
                    "page": 1,
                    "total": 2
                }
            }

### List all organizations [GET]
Return all organizations.

+ Parameters
    + max_results (optional, integer, `25`) ... The maximum number of results to return
    + page (optional, integer, `2`) ... The page number when using pagination
    + where (optional, string, `where={"name":"staff"}`) ... Filters

+ Response 200

    [Organization Collection][]

### Create Organization [POST]
Create a new Organization

+ Request (application/json)
    + Body

            {
                "name": "staff"
            }

+ Response 201

    [Organization][]

+ Response 422 (application/json)
    + Body

            {
                "_error": {
                    "code": 422,
                    "message": "Insertion failure: 1 document(s) contain(s) error(s)"
                },
                "_issues": {
                    "login": "value staff is not unique"
                },
                "_status": "ERR"
            }